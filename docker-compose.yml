version: "3.1"

services:
  gateway:
    build:
      context: ./
      dockerfile: ./gateway/Dockerfile
    ports:
      - 3000:3000
    restart: always
    networks:
      - yape-network
    environment:
      - PORT=3000
    env_file:
      - ./gateway/.env

  ms-anti-fraud:
    build:
      context: ./
      dockerfile: ./ms-anti-fraud/Dockerfile
    ports:
      - 5000
    restart: always
    networks:
      - yape-network
    environment:
      - PORT=5000
    env_file:
      - ./ms-anti-fraud/.env

  ms-error-report:
    build:
      context: ./
      dockerfile: ./ms-error-report/Dockerfile
    ports:
      - 4000
    restart: always
    networks:
      - yape-network
    environment:
      - PORT=4000
    env_file:
      - ./ms-error-report/.env

  ms-transaction:
    build:
      context: ./
      dockerfile: ./ms-transaction/Dockerfile
    ports:
      - 6000
    restart: always
    networks:
      - yape-network
    environment:
      - PORT=6000
    env_file:
      - ./ms-transaction/.env

  ms-transaction-query:
    build:
      context: ./
      dockerfile: ./ms-transaction-query/Dockerfile
    ports:
      - 7000
    restart: always
    networks:
      - yape-network
    environment:
      - PORT=7000
    env_file:
      - ./ms-transaction-query/.env

  kafka:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    networks:
      - yape-network

  postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=transaction_status
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - yape-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: rootuser
      MONGO_INITDB_ROOT_PASSWORD: rootpass
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - yape-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - yape-network

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 5050:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=root@pgadmin.com
      - PGADMIN_DEFAULT_PASSWORD=root
    networks:
      - yape-network

volumes:
  kafka_data:
    driver: local
  mongo-data:
    driver: local
  postgres_data:
    driver: local

networks:
  yape-network:
    driver: bridge